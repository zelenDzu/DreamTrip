<Window x:Class="DreamTrip.Windows.EnterOldPassword"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DreamTrip.Windows"
        xmlns:DreamTrip="clr-namespace:DreamTrip"
        mc:Ignorable="d"
        Title="Смена пароля" Height="300" Width="400" MinHeight="300" MinWidth="400" MaxHeight="300" MaxWidth="400" WindowStartupLocation="CenterScreen" WindowStyle="ToolWindow"  >
    <Window.Resources>
        <Style TargetType="{x:Type Border}" x:Key="borderStyle">
            <Setter Property="Background" Value="#FFC9F6F2"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBDF3F3"/>
                </Trigger>
                <Trigger Property="IsMouseCaptureWithin" Value="True">
                    <Setter Property="Background" Value="#FFA3EAEA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFF0F0F0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF727272"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="{x:Type PasswordBox}" 
        TargetType="{x:Type PasswordBox}">
            <Setter Property="DreamTrip:PasswordBoxMonitor.IsMonitoring" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border Name="Bd" 
                    Background="{TemplateBinding Background}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    SnapsToDevicePixels="true">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <TextBlock Text="{TemplateBinding Tag}"  
                           Margin="1, 3, 0, 0" 
                           Cursor="IBeam"
                           Foreground="LightGray"  
                           FontSize="24"
                           Visibility="Collapsed" 
                           Name="txtPrompt" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" 
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="DreamTrip:PasswordBoxMonitor.PasswordLength" Value="0">
                                <Setter Property="Visibility" TargetName="txtPrompt" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 SelectionBrush="#FFB1F3EE"
                                 FontFamily="Yu Gothic UI"
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}"  Background="Transparent" 
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 FontFamily="Yu Gothic UI"
                                 SelectionBrush="#FFB1F3EE" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid Background="LightGray">
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>


        <Border Grid.Row="1" Grid.Column="1" CornerRadius="20">
            <Border.Background>
                <SolidColorBrush Color="White" Opacity="0.7"/>
            </Border.Background>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock  Name="tbTitle" Grid.Row="1" TextWrapping="Wrap" FontFamily="Yu Gothic UI SemiLight" 
                            FontSize="20" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Text="Введите старый пароль"/>

                <TextBlock Name="tbWrongPassword" Grid.Row="2" Foreground="Red" TextWrapping="Wrap" FontFamily="Yu Gothic UI SemiLight" FontSize="20" 
                           Margin="25,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                           Text="Неверный пароль" Visibility="Hidden"/>

                <Border Name="borderPassword" Visibility="Visible" 
                        Height="37" Width="310" Background="White" Grid.Row="2" 
                        HorizontalAlignment="Center" VerticalAlignment="Top"  Margin="0,20,0,0"
                        BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <PasswordBox x:Name="pwbPassword" Background="Transparent" 
                         VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"
                         Height="40" Width="300" TabIndex="2" PasswordChanged="pwbPassword_PasswordChanged"
                         FontFamily="Yu Gothic UI" FontSize="22"
                         BorderBrush="Transparent" BorderThickness="0"
                         SelectionBrush="#FFB1F3EE" Tag="Пароль">
                    </PasswordBox>
                </Border>

                <TextBlock Name="tbWrongPassword2" Grid.Row="3" Foreground="Red" TextWrapping="Wrap" FontFamily="Yu Gothic UI SemiLight" FontSize="20" 
                           Margin="25,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                           Text="Пароли не совпадают" Visibility="Hidden"/>

                <Border Name="borderPassword2" Visibility="Hidden" 
                        Height="37" Width="310" Background="White" Grid.Row="3" 
                        HorizontalAlignment="Center" VerticalAlignment="Top"  Margin="0,20,0,0"
                        BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <PasswordBox x:Name="pwbPassword2" Background="Transparent" 
                         VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"
                         Height="40" Width="300" TabIndex="2" PasswordChanged="pwbPassword_PasswordChanged"
                         FontFamily="Yu Gothic UI" FontSize="22" 
                         BorderBrush="Transparent" BorderThickness="0"
                         SelectionBrush="#FFB1F3EE" Tag="Повторите пароль">
                    </PasswordBox>
                </Border>


                <Border Name="borderOk" Grid.Row="3" Height="35" Width="100" IsEnabled="False"
                        BorderBrush="#FF868686" BorderThickness="2" CornerRadius="5"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Margin="110,0,0,0">

                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="#FFC9F6F2"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFBAFEF8"/>
                                </Trigger>
                                <Trigger Property="IsMouseCaptureWithin" Value="True">
                                    <Setter Property="Background" Value="#FFA3EAEA"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Button x:Name="btnOk" TabIndex="2" Height="35" Width="100" 
                            FontFamily="Yu Gothic UI" FontSize="24" Cursor="Hand"
                            HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Content="Ок" Background="Transparent" Click="btnOk_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>

                </Border>

                <Border Name="borderCancel"  Grid.Row="3" Height="35" Width="100"
                        BorderBrush="#FF868686" BorderThickness="2" CornerRadius="5"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,110,0">

                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="#FFF0F0F0"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsMouseCaptureWithin" Value="True">
                                    <Setter Property="Background" Value="#FFF0F0F0"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Button x:Name="btnCancel" TabIndex="3" Height="35" Width="100"
                            FontFamily="Yu Gothic UI" FontSize="24" Cursor="Hand"
                            HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Content="Отмена" Background="Transparent" Click="btnCancel_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>

                </Border>


            </Grid>
        </Border>
    </Grid>


</Window>
