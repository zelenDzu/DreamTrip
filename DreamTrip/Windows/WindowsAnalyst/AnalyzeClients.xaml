<UserControl x:Class="DreamTrip.Windows.AnalyzeClients"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DreamTrip.Windows"
             xmlns:LiveCharts ="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="1300">
    <UserControl.Resources>
        <Style TargetType="{x:Type Border}" x:Key="borderStyle">
            <Setter Property="Background" Value="#FFC9F6F2"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBDF3F3"/>
                </Trigger>
                <Trigger Property="IsMouseCaptureWithin" Value="True">
                    <Setter Property="Background" Value="#FFA3EAEA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFF0F0F0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF727272"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 SelectionBrush="#FFB1F3EE"
                                 FontFamily="Yu Gothic UI"
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}"  Background="Transparent" 
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 FontFamily="Yu Gothic UI"
                                 SelectionBrush="#FFB1F3EE" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="Transparent"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" >
                </Border>
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="#FF97A0A5"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="transparent" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="transparent" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="transparent" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="Transparent" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource ComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}" 
                                Template="{StaticResource ComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="5,0,0,0"
                                Focusable="True" 
                                Background="Transparent"
                                Foreground="Green"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">

                                <Grid Name="DropDown" 
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                        x:Name="DropDownBorder"
                                        Background="white"
                                        CornerRadius="5"
                                        BorderThickness="1"
                                        BorderBrush="#888888"/>
                                    <ScrollViewer x:Name="cmbScroll" Margin="4,6,4,6" SnapsToDevicePixels="True" CanContentScroll="True">
                                        <StackPanel IsItemsHost="True" CanVerticallyScroll="True"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <!--<Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>-->
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Foreground="Black" Text="Аналитика по клиентам" FontWeight="Medium"
                       Grid.ColumnSpan="3"
                       FontFamily="Yu Gothic UI Semilight" FontSize="36"
                       HorizontalAlignment="Center" VerticalAlignment="Center"/>

        <Border x:Name="borderCancelButton" Grid.Row="0" Height="40" Width="130" IsEnabled="True"
                        BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5"
                        HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15,10,0,0" 
                        Style="{StaticResource borderStyle}">
            <Button x:Name="btnCancel" Height="40" Width="130"  Style="{StaticResource buttonStyle}"
                            FontFamily="Yu Gothic UI" FontSize="30" Cursor="Hand" TabIndex="11"
                            HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Content="Назад" Background="Transparent" Click="btnCancel_Click">

            </Button>
        </Border>

        <Button x:Name="btnHelpInfo" Width="37" Height="37"
                            HorizontalAlignment="Left" VerticalAlignment="Center"
                            Grid.Row="0" Margin="160,0,0,0" Style="{StaticResource helpQuestion}" Background="White"
                        ToolTipService.InitialShowDelay="200" ToolTipService.ShowDuration="60000" ToolTipService.Placement="Left" 
                        ToolTipService.HorizontalOffset="-180" ToolTipService.VerticalOffset="50">
            <Button.ToolTip>
                <ToolTip Width="900" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
                    <Border CornerRadius="10" BorderBrush="LightGray" BorderThickness="2">
                        <Border.Background>
                            <SolidColorBrush Color="White" Opacity="1"/>
                        </Border.Background>

                        <WrapPanel Margin="10" Orientation="Vertical" >
                            <TextBlock TextWrapping="Wrap" FontSize="18" Text="При нажатии на ФИО клиента откроется страница с его данными"/>
                            <TextBlock TextWrapping="Wrap" FontSize="18" Text=""/>
                            <TextBlock TextWrapping="Wrap" FontSize="18" Text="Таблица результатов ABC-анализа формируется автоматически"/>
                            <TextBlock TextWrapping="Wrap" FontSize="18" Text="Зеленый цвет записи - категория А, желтый - В, красный - С"/>
                            <TextBlock TextWrapping="Wrap" FontSize="18" Text=""/>
                            <TextBlock TextWrapping="Wrap" FontSize="18" Text="Показатель прироста количества клиентов (в %) формируется на основе данных этого и прошлого месяца"/>

                        </WrapPanel>
                    </Border>
                </ToolTip>
            </Button.ToolTip>
            <TextBlock Text="?" FontSize="25"/>
        </Button>

        <Border CornerRadius="20" Width="1300" Grid.Row="1">
            <Border.Background>
                <SolidColorBrush Color="White" Opacity="0.7"/>
            </Border.Background>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid Grid.Row="1" Margin="15" Height="620">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="35*"/>
                        <ColumnDefinition Width="60*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0" Grid.Column="0" Background="White" Width="430" Height="180" 
                            BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="15"
                            HorizontalAlignment="Left" VerticalAlignment="Top">

                        <Grid Margin="10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Foreground="#FF4C4C4C" Text="Новых клиентов за месяц" FontWeight="Medium"
                                   FontFamily="Yu Gothic UI" FontSize="24"
                                   HorizontalAlignment="Left" VerticalAlignment="Bottom"/>


                            <TextBlock Name="tbNewClientCount" Grid.Row="1"  Foreground="#FF00B1B1" Text="" FontWeight="Medium"
                                   FontFamily="Yu Gothic UI" FontSize="72" MaxWidth="400"
                                   HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <Polygon Name="plgGreen" Visibility="Hidden" Grid.Row="2" VerticalAlignment="Center" Fill="#FF00B16E" Points="5, 15, 15, 5, 25, 15" />
                            <Polygon Name="plgRed" Visibility="Hidden" Grid.Row="2" VerticalAlignment="Top" Fill="#FFFF6682" Points="5,15,15,25,25,15" />

                            <TextBlock Grid.Row="2" Name="tbNewClientPercent" Foreground="#FF4C4C4C" Text="" FontWeight="Medium"
                                   FontFamily="Yu Gothic UI" FontSize="16" Margin="30,0,0,0"
                                   HorizontalAlignment="Left" VerticalAlignment="Center"/>

                        </Grid>

                    </Border>

                    <Border  Grid.Row="1" Grid.Column="0" Height="45" Width="300"  Background="White"
                HorizontalAlignment="Left" VerticalAlignment="Top" 
                BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                        <ComboBox x:Name="cmbClientGroupType" TabIndex="7"
                        BorderThickness="2" Foreground="Black" 
                        SelectedIndex="1" Height="45" Width="300" 
                        VerticalAlignment="Center" HorizontalAlignment="Center" 
                        FontFamily="Yu Gothic UI" FontSize="26"
                                  SelectionChanged="cmbClientGroupType_SelectionChanged">

                            <ComboBoxItem Background="Transparent">По полу</ComboBoxItem>
                            <ComboBoxItem Background="Transparent">По возрасту</ComboBoxItem>
                            <ComboBoxItem Background="Transparent">По сфере занятости</ComboBoxItem>
                        </ComboBox>
                    </Border>

                    <Border Grid.Row="2" Background="White" BorderBrush="#FFD9D9D9" BorderThickness="2" 
                            Width="430" Height="360" Margin="0,60,0,0" CornerRadius="15"
                            HorizontalAlignment="Left" VerticalAlignment="Top">

                        
                        <LiveCharts:PieChart LegendLocation="Bottom" Name="pcClientGroup"
                                             StartingRotationAngle="270"
                                             InnerRadius="100">

                        </LiveCharts:PieChart>
                    </Border>

                    <DataGrid x:Name="dtgClients" 
                          FontFamily="Yu Gothic UI"
                          FontSize="24" Background="Transparent"
                          Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                          IsReadOnly="True"
                          AutoGenerateColumns="False" HorizontalScrollBarVisibility="Hidden"
                          RowDetailsVisibilityMode="Collapsed"  CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" 
                          SelectionMode="Single">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn CanUserSort="True" IsReadOnly="True" Header="ФИО клиента" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Cursor="Hand"  
                                                   Name="tbClientFullName"
                                                   MouseLeftButtonUp="tbClientFullName_MouseLeftButtonUp"
                                                   Tag="{Binding ClientId}"
                                                   Text="{Binding FullName}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Последняя поездка" Width="280">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <WrapPanel Orientation="Vertical">
                                            <TextBlock Text="{Binding LastTripDates}" />
                                            <TextBlock Text="{Binding LastTripPrice}" />
                                        </WrapPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn CanUserSort="True" IsReadOnly="True" Header="Выручка" Binding="{Binding TotalIncomeStr}" Width="150"/>
                            
                        </DataGrid.Columns>

                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Margin" Value="3"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CategoryABC}" Value="A">
                                        <Setter Property="Background" Value="#FF9BE3CE"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CategoryABC}" Value="B">
                                        <Setter Property="Background" Value="#FFEFE4B0"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CategoryABC}" Value="C">
                                        <Setter Property="Background" Value="#FFF8CBCB"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>

                </Grid>
            </Grid>
        </Border>

    </Grid>
</UserControl>
