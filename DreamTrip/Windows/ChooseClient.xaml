<UserControl x:Class="DreamTrip.Windows.ChooseClient"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DreamTrip.Windows"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1500">

    <UserControl.Resources>
        <Style TargetType="{x:Type Border}" x:Key="borderStyle">
            <Setter Property="Background" Value="#FFC9F6F2"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBDF3F3"/>
                </Trigger>
                <Trigger Property="IsMouseCaptureWithin" Value="True">
                    <Setter Property="Background" Value="#FFA3EAEA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFF0F0F0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF727272"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="{x:Type CheckBox}" x:Key="myCheckboxStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Border Width="32" Height="32" BorderBrush="#6fc3c3" BorderThickness="3" CornerRadius="3" VerticalAlignment="Top">
                                <Image x:Name="checkboxImage" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                       Source="../Resources/blank.png" Width="27"/>
                            </Border>
                            <ContentPresenter Margin="4,0,0,0" MaxWidth="600" Height="auto">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" MaxWidth="600"
                                                   FontFamily="Yu Gothic UI" FontSize="24" Foreground="Black" 
                                                   Text="{Binding Path=Content,
                                                RelativeSource={RelativeSource TemplatedParent},
                                                UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="../Resources/arrow.png"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseDirectlyOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="../Resources/hover_arrow.png"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseDirectlyOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="../Resources/hover.png"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="Transparent"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" >
                </Border>
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="#FF97A0A5"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="transparent" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="transparent" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="transparent" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="Transparent" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource ComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}" 
                                Template="{StaticResource ComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="5,0,0,0"
                                Focusable="True" 
                                Background="Transparent"
                                Foreground="Green"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">

                                <Grid Name="DropDown" 
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                        x:Name="DropDownBorder"
                                        Background="white"
                                        CornerRadius="5"
                                        BorderThickness="1"
                                        BorderBrush="#888888"/>
                                    <ScrollViewer x:Name="cmbScroll" Margin="4,6,4,6" SnapsToDevicePixels="True" CanContentScroll="True">
                                        <StackPanel IsItemsHost="True" CanVerticallyScroll="True"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <!--<Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>-->
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 SelectionBrush="#FFB1F3EE"
                                 FontFamily="Yu Gothic UI"
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}"  Background="Transparent" 
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 FontFamily="Yu Gothic UI"
                                 SelectionBrush="#FFB1F3EE" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border x:Name="borderChooseButton" Grid.Row="0" Height="40" Width="130" IsEnabled="False"
                        BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5"
                        HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,15,0" 
                        Style="{StaticResource borderStyle}">
            <Button x:Name="btnChoose" Height="40" Width="130"  Style="{StaticResource buttonStyle}"
                            FontFamily="Yu Gothic UI" FontSize="30" Cursor="Hand" TabIndex="4"
                            HorizontalAlignment="Center" VerticalAlignment="Center" Click="btnChoose_Click"
                            Content="Выбрать" Background="Transparent">

            </Button>
        </Border>

        <Border x:Name="borderCancelButton" Grid.Row="0" Height="40" Width="130" IsEnabled="True"
                        BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5"
                        HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15,10,0,0" 
                        Style="{StaticResource borderStyle}">
            <Button x:Name="btnCancel" Height="40" Width="130"  Style="{StaticResource buttonStyle}"
                            FontFamily="Yu Gothic UI" FontSize="30" Cursor="Hand" TabIndex="5"
                            HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Content="Назад" Background="Transparent" Click="btnCancel_Click">

            </Button>
        </Border>

        <Border Grid.Row="1" CornerRadius="20" Width="1500">
            <Border.Background>
                <SolidColorBrush Color="White" Opacity="0.7"/>
            </Border.Background>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid Grid.Row="1"  Height="635" Width="1400" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="22,0,22,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"></RowDefinition>
                        <RowDefinition Height="80"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <!--<TextBlock Grid.Row="0" FontFamily="Yu Gothic UI" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="30,0,0,0">Клиенты</TextBlock>-->

                    <Border x:Name="borderNameSearch" Height="45" Width="350" Background="White" 
                        Grid.Row="1" Margin="9,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" 
                        BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                        <TextBox x:Name="tbxNameSearch" Background="Transparent" TabIndex="1"
                         VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,4,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"
                         Height="36" Width="340"
                         FontFamily="Yu Gothic UI" FontSize="24" TextWrapping="NoWrap" 
                         BorderBrush="Transparent" BorderThickness="0"
                         SelectionBrush="#FFB1F3EE" Style="{StaticResource placeHolder}" Tag="Фамилия Имя Отчество" 
                             TextChanged="tbxNameSearch_TextChanged"/>
                    </Border>

                    <Border x:Name="borderSearch" Grid.Row="1" Height="45" Width="45" BorderBrush="#FFD9D9D9" HorizontalAlignment="Right" VerticalAlignment="Center" BorderThickness="2" CornerRadius="5" Margin="0,0,10,0">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="White"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFC9F6F2"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseCaptureWithin" Value="True">
                                        <Setter Property="Background" Value="#FFA3EAEA"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Button x:Name="btnSearch" Cursor="Hand" Height="37" Width="37" 
                            HorizontalAlignment="Center" VerticalAlignment="Center" TabIndex="2"
                            Click="btnSearch_Click">
                            <Image Source="../Resources/search.png"/>
                            <Button.ToolTip>
                                <StackPanel>
                                    <TextBlock Grid.Row="0" FontFamily="Yu Gothic UI" FontSize="20">Поиск по фильтру</TextBlock>
                                </StackPanel>
                            </Button.ToolTip>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseCaptured" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Border>

                    <TextBlock Grid.Row="0" FontFamily="Yu Gothic UI" Foreground="#FF979797" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="120,0,0,0">ФИО Клиента</TextBlock>

                    <DataGrid x:Name="dtgClients"  TabIndex="3"
                          FontFamily="Yu Gothic UI"
                          FontSize="24"
                          Grid.Row="2"
                          IsReadOnly="True"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ClientsList, UpdateSourceTrigger=PropertyChanged}"
                          RowDetailsVisibilityMode="Collapsed"  CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" 
                          Margin="10" SelectionMode="Single" 
                          SelectionChanged="dtgClients_SelectionChanged">
                        <DataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Header="Фамилия" Binding="{Binding Surname}" Width="*"/>
                            <DataGridTextColumn IsReadOnly="True" Header="Имя" Binding="{Binding Name}" Width="*"/>
                            <DataGridTextColumn IsReadOnly="True" Header="Отчество" Binding="{Binding Patronymic}" Width="*"/>
                            <DataGridTextColumn IsReadOnly="True" Header="Серия" Binding="{Binding PassportSeria}" Width="120"/>
                            <DataGridTextColumn IsReadOnly="True" Header="Номер" Binding="{Binding PassportNumber}" Width="130"/>
                            <DataGridTextColumn IsReadOnly="True" Header="Дата рождения" Binding="{Binding Birthday}" Width="230"/>
                            <DataGridTextColumn IsReadOnly="True" Header="Возраст" Binding="{Binding Age}" Width="140"/>
                            <DataGridTextColumn IsReadOnly="True" Header="Пол" Binding="{Binding Gender}" Width="95"/>
                            <DataGridTemplateColumn Width="50">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="btnOpenDetails" Content="+" Grid.Row="4" Background="White" 
                                FontFamily="Yu Gothic UI Semibold" Width="20" Height="20"
                                BorderBrush="#6fc3c3" BorderThickness="2" FontSize="12" Cursor="Hand" 
                                Click="ShowHideDetails">
                                            <Button.Resources>
                                                <Style TargetType="Border">
                                                    <Setter Property="CornerRadius" Value="5"/>
                                                </Style>
                                            </Button.Resources>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>

                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <StackPanel Background="#FFEFFFFF" Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="20" Margin="10,0,0,0">Телефон</TextBlock>
                                        <TextBlock FontSize="20" Margin="10,0,0,0" Text="{Binding Phone}"></TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="20" Margin="10,0,0,0">Email:</TextBlock>
                                        <TextBlock FontSize="20" Margin="10,0,0,0" Text="{Binding Email}"></TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="20" Margin="10,0,0,0">Сфера работы:</TextBlock>
                                        <TextBlock FontSize="20" Margin="10,0,0,0" Text="{Binding WorkFieldName}"></TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="20" Margin="10,0,0,0">Специальность:</TextBlock>
                                        <TextBlock FontSize="20" Margin="10,0,0,0" Text="{Binding WorkPostName}"></TextBlock>
                                    </StackPanel>

                                </StackPanel>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                    </DataGrid>

                    <TextBlock x:Name="tbNothingFound" Visibility="Hidden" Grid.Row="2" FontFamily="Yu Gothic UI" FontSize="30" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="30,100,0,0" Foreground="#FF5D5D5D">Ничего не нашлось :(</TextBlock>

                </Grid>
            </Grid>
        </Border>

        <Grid Grid.Row="0" Grid.RowSpan="2" x:Name="gridTourLoad" Visibility="Hidden" >
            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity="0.7"/>
            </Grid.Background>
            <Image x:Name="imgTourLoad" Source="../Resources/wait.png" Width="80" Margin="0,0,450,0" 
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock x:Name="tbTourLoad" Foreground="White" Width="420" Text="Загрузка туров... Пожалуйста, подождите" FontWeight="Medium"
                       Grid.ColumnSpan="3" TextWrapping="Wrap" Margin="100,0,0,0"
                       FontFamily="Yu Gothic UI bold" FontSize="36" TextAlignment="Center"
                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
    </Grid>



    
</UserControl>

