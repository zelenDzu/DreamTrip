<UserControl x:Class="DreamTrip.Windows.Tours"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DreamTrip.Windows"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1500" Width="1500"> 
    <UserControl.Resources>
        <Style TargetType="{x:Type Border}" x:Key="borderStyle">
            <Setter Property="Background" Value="#FFC9F6F2"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBDF3F3"/>
                </Trigger>
                <Trigger Property="IsMouseCaptureWithin" Value="True">
                    <Setter Property="Background" Value="#FFA3EAEA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFF0F0F0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF727272"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="{x:Type CheckBox}" x:Key="myCheckboxStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Border Width="32" Height="32" BorderBrush="#6fc3c3" BorderThickness="3" CornerRadius="3" VerticalAlignment="Top">
                                <Image x:Name="checkboxImage" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                       Source="../../Resources/blank.png" Width="27"/>
                            </Border>
                            <ContentPresenter Margin="4,0,0,0" MaxWidth="600" Height="auto">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" MaxWidth="600"
                                                   FontFamily="Yu Gothic UI" FontSize="20" Foreground="Black" 
                                                   Text="{Binding Path=Content,
                                                RelativeSource={RelativeSource TemplatedParent},
                                                UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="../../Resources/arrow.png"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseDirectlyOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="../../Resources/hover_arrow.png"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseDirectlyOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="../../Resources/hover.png"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="Transparent"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" >
                </Border>
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="#FF97A0A5"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="transparent" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="transparent" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="transparent" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="Transparent" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource ComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}" 
                                Template="{StaticResource ComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="5,0,0,0"
                                Focusable="True" 
                                Background="Transparent"
                                Foreground="Green"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">

                                <Grid Name="DropDown" 
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                        x:Name="DropDownBorder"
                                        Background="white"
                                        CornerRadius="5"
                                        BorderThickness="1"
                                        BorderBrush="#888888"/>
                                    <ScrollViewer x:Name="cmbScroll" Margin="4,6,4,6" SnapsToDevicePixels="True" CanContentScroll="True">
                                        <StackPanel IsItemsHost="True" CanVerticallyScroll="True"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <!--<Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>-->
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 SelectionBrush="#FFB1F3EE"
                                 FontFamily="Yu Gothic UI"
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}"  Background="Transparent" 
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 FontFamily="Yu Gothic UI"
                                 SelectionBrush="#FFB1F3EE" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="menuButton">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="White" Opacity="0.6"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="Transparent"  >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="270" />
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" Width="270" CornerRadius="0,5,5,0">
            <Border.Background>
                <SolidColorBrush Color="White" Opacity="0.4"/>
            </Border.Background>
            
            <Grid Width="270">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" FontFamily="Yu Gothic UI" Foreground="Black" FontSize="24" 
                           HorizontalAlignment="Left" VerticalAlignment="Center" 
                           Margin="10,0,0,0">Фильтр поиска</TextBlock>

                <Border x:Name="borderClear" Grid.Row="0" Height="35" Width="35" 
                            HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,50,0"
                            BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5" >
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="White"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFC9F6F2"/>
                                </Trigger>
                                <Trigger Property="IsMouseCaptureWithin" Value="True">
                                    <Setter Property="Background" Value="#FFA3EAEA"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Button x:Name="btnClear" Cursor="Hand" Height="37" Width="37" TabIndex="9"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Click="btnClear_Click">
                        <Image Source="../../Resources/clear.png"/>
                        <Button.ToolTip>
                            <StackPanel>
                                <TextBlock Grid.Row="0" FontFamily="Yu Gothic UI" FontSize="20">Очистить фильтр</TextBlock>
                            </StackPanel>
                        </Button.ToolTip>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseCaptured" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>

                <Border x:Name="borderSearch" Grid.Row="0" Height="35" Width="35" BorderBrush="#FFD9D9D9" 
                        HorizontalAlignment="Right" VerticalAlignment="Center" BorderThickness="2" CornerRadius="5" Margin="0,0,10,0">
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="White"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFC9F6F2"/>
                                </Trigger>
                                <Trigger Property="IsMouseCaptureWithin" Value="True">
                                    <Setter Property="Background" Value="#FFA3EAEA"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Button x:Name="btnSearch" Cursor="Hand" Height="37" Width="37" TabIndex="10"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Click="btnSearch_Click">
                        <Image Source="../../Resources/search.png"/>
                        <Button.ToolTip>
                            <StackPanel>
                                <TextBlock Grid.Row="0" FontFamily="Yu Gothic UI" FontSize="20">Поиск по фильтру</TextBlock>
                            </StackPanel>
                        </Button.ToolTip>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseCaptured" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>

                <Border x:Name="borderNameSearch" Height="35" Width="260" Background="White" 
                            Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" 
                            BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <TextBox x:Name="tbxTourNameSearch" Background="Transparent" TabIndex="1"
                             VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,4,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"
                             Height="35" Width="250" TextChanged="tbxTourNameSearch_TextChanged"
                             FontFamily="Yu Gothic UI" FontSize="20" TextWrapping="NoWrap" 
                             BorderBrush="Transparent" BorderThickness="0"
                             SelectionBrush="#FFB1F3EE" Style="{StaticResource placeHolder}" 
                             Tag="Название тура" />
                </Border>

                <TextBlock Grid.Row="2" FontFamily="Yu Gothic UI" Foreground="Black" FontSize="24" 
                           HorizontalAlignment="Left" VerticalAlignment="Center" 
                           Margin="10,0,0,0">Цена</TextBlock>

                <Border x:Name="borderPriceFrom" Height="35" Width="90" Background="White" Grid.Row="2" 
                        Margin="0,0,100,0" HorizontalAlignment="Right" VerticalAlignment="Center" 
                        BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <TextBox x:Name="tbxPriceFrom" Background="Transparent" TabIndex="2"
                            VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,4,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"
                            Height="35" Width="80"
                            FontFamily="Yu Gothic UI" FontSize="20" TextWrapping="NoWrap" 
                            BorderBrush="Transparent" BorderThickness="0"
                            SelectionBrush="#FFB1F3EE" Style="{StaticResource placeHolder}" Tag="От" 
                                TextChanged="tbxPriceFrom_TextChanged"/>
                </Border>

                <Border x:Name="borderPriceTo" Height="35" Width="90" Background="White" 
                        Grid.Row="2" Margin="0,0,5,0" 
                    HorizontalAlignment="Right" VerticalAlignment="Center" 
                    BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <TextBox x:Name="tbxPriceTo" Background="Transparent" TabIndex="3"
                        VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,4,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"
                        Height="35" Width="80"
                        FontFamily="Yu Gothic UI" FontSize="20" TextWrapping="NoWrap" 
                        BorderBrush="Transparent" BorderThickness="0"
                        SelectionBrush="#FFB1F3EE" Style="{StaticResource placeHolder}" Tag="До" 
                            TextChanged="tbxPriceTo_TextChanged"/>
                </Border>

              
                <Border x:Name="borderCountry" Grid.Row="3" Height="35" Width="125" Background="White"
                    HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"
                    BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <ComboBox x:Name="lstCountry" TabIndex="4"
                            BorderThickness="2" Foreground="Black" 
                            SelectedIndex="0" Height="35" Width="125"
                            VerticalAlignment="Center" HorizontalAlignment="Center" 
                            FontFamily="Yu Gothic UI" FontSize="20" 
                            SelectionChanged="lstCountry_SelectionChanged" DropDownOpened="lstCountry_DropDownOpened" 
                              DropDownClosed="lstCountry_DropDownClosed">

                        <ComboBoxItem x:Name="FirstItemCountry" Margin="0,0,0,-40" IsEnabled="False" Visibility="Hidden" >
                            <TextBlock Background="Transparent" Foreground="LightGray">Страна</TextBlock>
                        </ComboBoxItem>


                        <ComboBoxItem x:Name="SecondItemCountry">
                            <CheckBox x:Name="SecondItemCheckBoxCountry" Style="{StaticResource myCheckboxStyle}" Content="Любая"
                                    Checked="CheckBoxAllCountries_Checked" Unchecked="CheckBoxAllCountries_UnChecked"/>
                        </ComboBoxItem>



                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <ComboBoxItem>
                                    <CheckBox Checked="CheckBoxCountry_Checked" Unchecked="CheckBoxCountry_Unchecked" Style="{StaticResource myCheckboxStyle}" 
                                            IsChecked="{Binding Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Content="{Binding Path=CountryName}"/>
                                </ComboBoxItem>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>

                    </ComboBox>
                </Border>

                <Border x:Name="borderCity" Grid.Row="3" Height="35" Width="125" Background="White"
                    HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0"
                    BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <ComboBox x:Name="lstCity" TabIndex="5"
                            BorderThickness="2" Foreground="Black" 
                            SelectedIndex="0" Height="35" Width="125"
                            VerticalAlignment="Center" HorizontalAlignment="Center" 
                            FontFamily="Yu Gothic UI" FontSize="20" 
                            SelectionChanged="lstCity_SelectionChanged" DropDownOpened="lstCity_DropDownOpened" DropDownClosed="lstCity_DropDownClosed">

                        <ComboBoxItem x:Name="FirstItemCity" Margin="0,0,0,-40" IsEnabled="False" Visibility="Hidden" >
                            <TextBlock Background="Transparent" Foreground="LightGray">Город</TextBlock>
                        </ComboBoxItem>


                        <ComboBoxItem x:Name="SecondItemCity" Visibility="Collapsed" IsEnabled="False">
                            <CheckBox x:Name="SecondItemCheckBoxCity" Style="{StaticResource myCheckboxStyle}" Content="Любая"
                                    Checked="CheckBoxAllCities_Checked" Unchecked="CheckBoxAllCities_UnChecked"/>
                        </ComboBoxItem>

                        <ComboBoxItem x:Name="ThirdItemCity" IsEnabled="False" >
                            <TextBlock Background="Transparent" Foreground="LightGray">Выберите одну страну</TextBlock>
                        </ComboBoxItem>


                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <ComboBoxItem>
                                    <CheckBox Checked="CheckBoxCity_Checked" Unchecked="CheckBoxCity_Unchecked" Style="{StaticResource myCheckboxStyle}" 
                                            IsChecked="{Binding Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Content="{Binding Path=CityName}"/>
                                </ComboBoxItem>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>

                    </ComboBox>
                </Border>

                <Border x:Name="borderFeed" Grid.Row="4" Height="35" Width="125" Background="White"
                    HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"
                    BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <ComboBox x:Name="lstFeed" TabIndex="6"
                            BorderThickness="2" Foreground="Black" 
                            SelectedIndex="0" Height="35" Width="125"
                            VerticalAlignment="Center" HorizontalAlignment="Center" 
                            FontFamily="Yu Gothic UI" FontSize="20" DropDownOpened="lstFeed_DropDownOpened" DropDownClosed="lstFeed_DropDownClosed" 
                              SelectionChanged="lstFeed_SelectionChanged">

                        <ComboBoxItem Margin="0,0,0,-40" IsEnabled="False" Visibility="Hidden" >
                            <TextBlock Background="Transparent" Foreground="LightGray">Питание</TextBlock>
                        </ComboBoxItem>


                        <ComboBoxItem x:Name="SecondItemFeed">
                            <CheckBox x:Name="SecondItemCheckBoxFeed" Checked="SecondItemCheckBoxFeed_Checked" 
                                      Unchecked="SecondItemCheckBoxFeed_Unchecked" Style="{StaticResource myCheckboxStyle}" Content="Любая"/>
                        </ComboBoxItem>


                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <ComboBoxItem>
                                    <CheckBox Style="{StaticResource myCheckboxStyle}"  Checked="CheckBoxFeed_Checked" Unchecked="CheckBoxFeed_Unchecked"
                                            IsChecked="{Binding Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Content="{Binding Path=FeedTypeName}"/>
                                </ComboBoxItem>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>

                    </ComboBox>
                </Border>

                <Border x:Name="borderHotel" Grid.Row="4" Height="35" Width="125" Background="White"
                    HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0"
                    BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <ComboBox x:Name="lstHotel" TabIndex="7"
                            BorderThickness="2" Foreground="Black" 
                            SelectedIndex="0" Height="35" Width="125"
                            VerticalAlignment="Center" HorizontalAlignment="Center" 
                            FontFamily="Yu Gothic UI" FontSize="20" SelectionChanged="lstStars_SelectionChanged"
                              DropDownOpened="lstHotel_DropDownOpened" DropDownClosed="lstHotel_DropDownClosed">

                        <ComboBoxItem Margin="0,0,0,-40" IsEnabled="False" Visibility="Hidden" >
                            <TextBlock Background="Transparent" Foreground="LightGray">Отель</TextBlock>
                        </ComboBoxItem>


                        <ComboBoxItem x:Name="SecondItemHotel">
                            <CheckBox x:Name="SecondItemCheckBoxHotel" Checked="SecondItemCheckBoxHotel_Checked"
                                      Unchecked="SecondItemCheckBoxHotel_Unchecked" Style="{StaticResource myCheckboxStyle}" Content="Любой"/>
                        </ComboBoxItem>

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <ComboBoxItem>
                                    <CheckBox Style="{StaticResource myCheckboxStyle}" Checked="CheckBoxHotel_Checked" Unchecked="CheckBoxHotel_Unchecked"
                                            IsChecked="{Binding Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Content="{Binding Path=StarsString}"/>
                                </ComboBoxItem>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>

                    </ComboBox>
                </Border>

                <Border x:Name="borderType" Grid.Row="5" Height="35" Width="260" Background="White"
                    HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0"
                    BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5">
                    <ComboBox x:Name="lstType" TabIndex="8"
                            BorderThickness="2" Foreground="Black" 
                            SelectedIndex="0" Height="35" Width="260"
                            VerticalAlignment="Center" HorizontalAlignment="Center" 
                            FontFamily="Yu Gothic UI" FontSize="20" SelectionChanged="lstType_SelectionChanged" 
                              DropDownOpened="lstType_DropDownOpened" DropDownClosed="lstType_DropDownClosed">

                        <ComboBoxItem Margin="0,0,0,-40" IsEnabled="False" Visibility="Hidden" >
                            <TextBlock Background="Transparent" Foreground="LightGray">Тип тура</TextBlock>
                        </ComboBoxItem>


                        <ComboBoxItem x:Name="SecondItemType">
                            <CheckBox x:Name="SecondItemCheckBoxType" Checked="SecondItemCheckBoxType_Checked" 
                                      Unchecked="SecondItemCheckBoxType_Unchecked" Style="{StaticResource myCheckboxStyle}" Content="Любой"/>
                        </ComboBoxItem>


                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <ComboBoxItem>
                                    <CheckBox Style="{StaticResource myCheckboxStyle}" Checked="CheckBoxType_Checked" Unchecked="CheckBoxType_Unchecked"
                                            IsChecked="{Binding Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Content="{Binding Path=Name}"/>
                                </ComboBoxItem>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>

                    </ComboBox>
                </Border>

                
                
            </Grid>
        </Border>

        <Grid x:Name="mainGrid" Width="1230" ScrollViewer.VerticalScrollBarVisibility="Disabled"
              Grid.Column="1" Background="Transparent" HorizontalAlignment="Left" Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border x:Name="borderCancelButton" Grid.Row="0" Height="40" Width="130" IsEnabled="True"
                        BorderBrush="#FFD9D9D9" BorderThickness="2" CornerRadius="5" 
                        HorizontalAlignment="Left" VerticalAlignment="Center" Margin="48,0,0,0" 
                        Style="{StaticResource borderStyle}">
                <Button x:Name="btnCancel" Height="40" Width="130"  Style="{StaticResource buttonStyle}"
                            FontFamily="Yu Gothic UI" FontSize="30" Cursor="Hand" TabIndex="11"
                            HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Content="Назад" Background="Transparent" Click="btnCancel_Click">

                </Button>
            </Border>

            <Button x:Name="btnHelpInfo" Width="37" Height="37"
                            HorizontalAlignment="Left" VerticalAlignment="Center"
                            Grid.Row="0" Margin="190,0,0,0" Style="{StaticResource helpQuestion}" Background="White"
                        ToolTipService.InitialShowDelay="200" ToolTipService.ShowDuration="60000" ToolTipService.Placement="Left" 
                        ToolTipService.HorizontalOffset="-180" ToolTipService.VerticalOffset="50">
                <Button.ToolTip>
                    <ToolTip Width="900" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
                        <Border CornerRadius="10" BorderBrush="LightGray" BorderThickness="2">
                            <Border.Background>
                                <SolidColorBrush Color="White" Opacity="1"/>
                            </Border.Background>

                            <WrapPanel Margin="10" Orientation="Vertical" >
                                <TextBlock TextWrapping="Wrap" FontSize="18" Text="При отметке варианта «Любая» будут отмечены пункты списка"/>
                                <TextBlock TextWrapping="Wrap" FontSize="18" Text="При снятии этой отметки все пункты списка будут также не отмечены"/>
                            </WrapPanel>
                        </Border>
                    </ToolTip>
                </Button.ToolTip>
                <TextBlock Text="?" FontSize="25"/>
            </Button>


            <TextBlock Grid.Row="0" Foreground="Black" Text="Туры" FontWeight="Medium"
                       Grid.ColumnSpan="3"
                       FontFamily="Yu Gothic UI Semilight" FontSize="36"
                       HorizontalAlignment="Center" VerticalAlignment="Center"/>

            <TextBlock x:Name="tbNothingFound" Visibility="Hidden" Grid.Row="1" FontFamily="Yu Gothic UI" 
                       FontSize="30" HorizontalAlignment="Center" VerticalAlignment="Top"  Margin="0,100,0,0"
                       Foreground="#FF5D5D5D">Ничего не нашлось :(</TextBlock>

            <ListView x:Name="lvTours" Grid.Row="1" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  
                      ScrollViewer.VerticalScrollBarVisibility="Auto" 
                      HorizontalContentAlignment="Center" BorderThickness="0">


                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            </WrapPanel>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                
                    
                
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Button x:Name="TourButton" Grid.Row="1" Grid.Column="2" Cursor="Hand" Grid.RowSpan="2" VerticalAlignment="Top" Margin="15,20"
                         Width="350" Height="566" Style="{StaticResource menuButton}" Tag="{Binding TourId}" Click="TourButton_Click">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="15"/>
                                    </Style>
                                </Button.Resources>
                                <Grid Height="546" Width="350" Margin="0,0,0,20">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="318"/>
                                        <RowDefinition Height="31"/>
                                        <RowDefinition Height="70"/>
                                        <RowDefinition Height="90"/>
                                        <RowDefinition Height="37"/>
                                    </Grid.RowDefinitions>

                                    <Border BorderBrush="Black" BorderThickness="2">
                                        <Border.OpacityMask>
                                            <VisualBrush>
                                                <VisualBrush.Visual>
                                                    <Border CornerRadius="0.05" Width="1" Height="1" Background="White"/>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Border.OpacityMask>
                                    <Image x:Name="imgTourPhoto"  Source="{Binding ImageSource}" Width="350" Height="318" Stretch="UniformToFill"/>
                                </Border>

                                    <TextBlock Grid.Row="1" Foreground="Black" Text="{Binding Location}" 
                                   TextWrapping="Wrap" 
                                   FontFamily="Yu Gothic UI" FontSize="25"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>

                                    <TextBlock Grid.Row="2" Foreground="Black" Text="{Binding TourTypes}"  
                                   TextWrapping="Wrap"  
                                   FontFamily="Yu Gothic UI SemiLight" FontSize="17"
                                   HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0"/>

                                    <TextBlock Grid.Row="3" Foreground="Black" Text="{Binding Name}" 
                                   TextWrapping="Wrap" 
                                   FontFamily="Yu Gothic UI Semibold" FontSize="36"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" TextAlignment="Center"/>

                                    <TextBlock Grid.Row="4" Foreground="Black" Text="{Binding StartPrice}" 
                                   TextWrapping="Wrap" 
                                   FontFamily="Yu Gothic UI Semibold" FontSize="25"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,20,0" TextAlignment="Right"/>
                                </Grid>
                            </Button>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            <!--</ScrollViewer>-->
        </Grid>
    </Grid>
</UserControl>
